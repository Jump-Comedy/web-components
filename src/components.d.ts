/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface BigEventList {
        "config": any;
        "domain": string;
        "events": any[];
    }
    interface CompactEventList {
        "config": any;
        "domain": string;
        "events": any[];
    }
    interface EventList {
        "draftMode": boolean;
        "reRender": number;
        "widgetId": any;
    }
    interface MailingListSignupForm {
        "buttonBgColor": string;
        "buttonBorderColor": string;
        "buttonHoverBgColor": string;
        "buttonHoverBorderColor": string;
        "buttonHoverTextColor": string;
        "buttonTextColor": string;
        "correctedEmailHighlightColor": string;
        "emailExistsInMailingListMessage": string;
        "inputBgColor": string;
        "inputBorderColor": string;
        "inputFocusBorderColor": string;
        "inputFocusRingColor": string;
        "inputPlaceholderColor": string;
        "inputTextColor": string;
        "mailingListId": string;
        "mailingListNotFoundMessage": string;
        "modalBackgroundColor": string;
        "modalTextColor": string;
        "signUpButtonLabel": string;
        "successMessage": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
}
declare global {
    interface HTMLBigEventListElement extends Components.BigEventList, HTMLStencilElement {
    }
    var HTMLBigEventListElement: {
        prototype: HTMLBigEventListElement;
        new (): HTMLBigEventListElement;
    };
    interface HTMLCompactEventListElement extends Components.CompactEventList, HTMLStencilElement {
    }
    var HTMLCompactEventListElement: {
        prototype: HTMLCompactEventListElement;
        new (): HTMLCompactEventListElement;
    };
    interface HTMLEventListElement extends Components.EventList, HTMLStencilElement {
    }
    var HTMLEventListElement: {
        prototype: HTMLEventListElement;
        new (): HTMLEventListElement;
    };
    interface HTMLMailingListSignupFormElement extends Components.MailingListSignupForm, HTMLStencilElement {
    }
    var HTMLMailingListSignupFormElement: {
        prototype: HTMLMailingListSignupFormElement;
        new (): HTMLMailingListSignupFormElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "big-event-list": HTMLBigEventListElement;
        "compact-event-list": HTMLCompactEventListElement;
        "event-list": HTMLEventListElement;
        "mailing-list-signup-form": HTMLMailingListSignupFormElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface BigEventList {
        "config"?: any;
        "domain"?: string;
        "events"?: any[];
    }
    interface CompactEventList {
        "config"?: any;
        "domain"?: string;
        "events"?: any[];
    }
    interface EventList {
        "draftMode"?: boolean;
        "reRender"?: number;
        "widgetId"?: any;
    }
    interface MailingListSignupForm {
        "buttonBgColor"?: string;
        "buttonBorderColor"?: string;
        "buttonHoverBgColor"?: string;
        "buttonHoverBorderColor"?: string;
        "buttonHoverTextColor"?: string;
        "buttonTextColor"?: string;
        "correctedEmailHighlightColor"?: string;
        "emailExistsInMailingListMessage"?: string;
        "inputBgColor"?: string;
        "inputBorderColor"?: string;
        "inputFocusBorderColor"?: string;
        "inputFocusRingColor"?: string;
        "inputPlaceholderColor"?: string;
        "inputTextColor"?: string;
        "mailingListId"?: string;
        "mailingListNotFoundMessage"?: string;
        "modalBackgroundColor"?: string;
        "modalTextColor"?: string;
        "signUpButtonLabel"?: string;
        "successMessage"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface IntrinsicElements {
        "big-event-list": BigEventList;
        "compact-event-list": CompactEventList;
        "event-list": EventList;
        "mailing-list-signup-form": MailingListSignupForm;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "big-event-list": LocalJSX.BigEventList & JSXBase.HTMLAttributes<HTMLBigEventListElement>;
            "compact-event-list": LocalJSX.CompactEventList & JSXBase.HTMLAttributes<HTMLCompactEventListElement>;
            "event-list": LocalJSX.EventList & JSXBase.HTMLAttributes<HTMLEventListElement>;
            "mailing-list-signup-form": LocalJSX.MailingListSignupForm & JSXBase.HTMLAttributes<HTMLMailingListSignupFormElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
